{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "SQL admin username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL admin password"
      }
    },
    "environmentPrefix": {
      "type": "string",
      "metadata": {
        "description": "Naming prefix for the environment"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Address space for the virtual network"
      }
    },
    "appSubnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Address space for the app server subnet"
      }
    },
    "resSubnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Address space for the resource server subnet"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A8m_v2",
      "metadata": {
        "description": "Size of the VMs"
      }
    },
    "sqlDBSize": {
      "type": "string",
      "defaultValue": "S3",
      "metadata": {
        "description": "Size of the SQL Database"
      }
    }
  },
  "variables": {
    "vNetName": "[concat('oupspsvnet', parameters('environmentPrefix'))]",
    "appSubnetName": "[concat('oupspssub', parameters('environmentPrefix'), 'app')]",
    "resSubnetName": "[concat('oupspssub', parameters('environmentPrefix'), 'res')]",
    "appSubnetNSGName": "[concat('oupspsnsg', parameters('environmentPrefix'), 'appsub')]",
    "resSubnetNSGName": "[concat('oupspsnsg', parameters('environmentPrefix'), 'ressub')]",
    "lbName": "[concat('oupspslb', parameters('environmentPrefix'))]",
    "lbPipName": "[concat('oupspspip', parameters('environmentPrefix'), 'lb')]",
    "resPipName": "[concat('oupspspip', parameters('environmentPrefix'), 'res')]",
    "stgAccountName": "[concat('oupspsstg', parameters('environmentPrefix'), 'diag')]",
    "appNicNamePrefix": "[concat('oupspsnic', parameters('environmentPrefix'), 'app')]",
    "resNicName": "[concat('oupspsnic', parameters('environmentPrefix'), 'res')]",
    "avsName": "[concat('oupspsavs', parameters('environmentPrefix'), 'app')]",
    "sqlServerName": "[concat('oupsps', parameters('environmentPrefix'), 'sqlsrv')]",
    "sqlDBName": "[concat('oupsps', parameters('environmentPrefix'), 'sqldb')]",
    "numberOfAppServers": 2,
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'), '/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/AppServers')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('stgAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('avsName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbPipName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('oupsps', parameters('environmentPrefix'))]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('resPipName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('oupsps', parameters('environmentPrefix'), 'res')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('appSubnetNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "http-lb-inbound",
            "properties": {
              "description": "Allow HTTP inbound from internet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "https-lb-inbound",
            "properties": {
              "description": "Allow HTTPS inbound from internet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
              }
            },
            {
              "name": "http-nat-rule-app0-inbound",
              "properties": {
                "description": "Allow HTTP directly to App Server 0 from internet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
              }
            },
            {
              "name": "http-nat-rule-app1-inbound",
              "properties": {
                "description": "Allow HTTP directly to App Server 1 from internet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8081",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
              }
            },
            {
              "name": "https-nat-rule-app0-inbound",
              "properties": {
                "description": "Allow HTTPS directly to App Server 0 from internet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 140,
                "direction": "Inbound"
              }
            },
            {
              "name": "https-nat-rule-app1-inbound",
              "properties": {
                "description": "Allow HTTPS directly to App Server 1 from internet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8444",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 150,
                "direction": "Inbound"
              }
            },
            {
              "name": "rdp-rule-inbound",
              "properties": {
                "description": "Allow RDP from Resource subnet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "[parameters('resSubnetAddressSpace')]",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 160,
                "direction": "Inbound"
              }
            }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('resSubnetNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "rdp-inbound",
            "properties": {
              "description": "Allow RDP inbound from internet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups', variables('appSubnetNSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups', variables('resSubnetNSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('appSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('appSubnetAddressSpace')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appSubnetNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('resSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('resSubnetAddressSpace')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resSubnetNSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('oupspsnic', parameters('environmentPrefix'), 'app', copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfAppServers')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('appSubnetName'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'AppServers')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('lbName'), concat('AppServer', copyindex(), 'HTTP'))]"
                },
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('lbName'), concat('AppServer', copyindex(), 'HTTPS'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('resNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('resPipName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('resSubnetName'))]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('resPipName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lbname')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPipName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPipName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "AppServers"
          }
        ],
        "inboundNatRules": [
          {
            "name": "AppServer0HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false
            }
          },
          {
            "name": "AppServer1HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8081,
              "backendPort": 8081,
              "enableFloatingIP": false
            }
          },
          {
            "name": "AppServer0HTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8443,
              "backendPort": 8443,
              "enableFloatingIP": false
            }
          },
          {
            "name": "AppServer1HTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8444,
              "backendPort": 8444,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "AppServersHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          },
          {
            "name": "AppServersHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('oupsps', parameters('environmentPrefix'), 'app', copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfAppServers')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('stgAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('appNicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('avsName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat('oupsps', parameters('environmentPrefix'), 'app', copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "dataDisks": [
            {
              "diskSizeGB": 64,
              "lun": 0,
              "createOption": "Empty"
            }
          ],
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('appNicNamePrefix'),copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('stgAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('oupsps', parameters('environmentPrefix'), 'res')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('stgAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('resNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat('oupsps', parameters('environmentPrefix'), 'res')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "dataDisks": [
            {
              "diskSizeGB": 64,
              "lun": 0,
              "createOption": "Empty"
            }
          ],
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('resNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('stgAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('sqlDBName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "properties": {
            "edition": "Standard",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('sqlDBSize')]"
          }
        },
        {
          "type": "firewallRules",
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[variables('sqlserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    }
  ]
}
